// <auto-generated />
using System;
using JasperGreen.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JasperGreen.Migrations
{
    [DbContext(typeof(JasperGreenContext))]
    [Migration("20250423080304_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("JasperGreen.Models.Crew", b =>
                {
                    b.Property<int>("CrewID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CrewID"));

                    b.Property<int>("CrewForemanID")
                        .HasColumnType("int");

                    b.Property<int>("CrewMember1ID")
                        .HasColumnType("int");

                    b.Property<int>("CrewMember2ID")
                        .HasColumnType("int");

                    b.Property<string>("CrewName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CrewID");

                    b.HasIndex("CrewForemanID");

                    b.HasIndex("CrewMember1ID");

                    b.HasIndex("CrewMember2ID");

                    b.ToTable("Crews");

                    b.HasData(
                        new
                        {
                            CrewID = 1,
                            CrewForemanID = 1,
                            CrewMember1ID = 5,
                            CrewMember2ID = 7,
                            CrewName = "Mowing Crew 1"
                        },
                        new
                        {
                            CrewID = 2,
                            CrewForemanID = 2,
                            CrewMember1ID = 10,
                            CrewMember2ID = 9,
                            CrewName = "Mowing Crew 2"
                        },
                        new
                        {
                            CrewID = 3,
                            CrewForemanID = 11,
                            CrewMember1ID = 12,
                            CrewMember2ID = 8,
                            CrewName = "Mowing Crew 3"
                        },
                        new
                        {
                            CrewID = 4,
                            CrewForemanID = 6,
                            CrewMember1ID = 4,
                            CrewMember2ID = 3,
                            CrewName = "Mowing Crew 4"
                        },
                        new
                        {
                            CrewID = 5,
                            CrewForemanID = 13,
                            CrewMember1ID = 14,
                            CrewMember2ID = 15,
                            CrewName = "Mowing Crew 5"
                        });
                });

            modelBuilder.Entity("JasperGreen.Models.Customer", b =>
                {
                    b.Property<int>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerID"));

                    b.Property<string>("BillingAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillingCity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillingState")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillingZip")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerFirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerLastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerID");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerID = 1,
                            BillingAddress = "2200 Cottage Ln",
                            BillingCity = "College Station",
                            BillingState = "TX",
                            BillingZip = "77845",
                            CustomerFirstName = "Aarya",
                            CustomerLastName = "Mummadavarapu",
                            CustomerPhone = "(512) 588-9150"
                        },
                        new
                        {
                            CustomerID = 2,
                            BillingAddress = "85 North Campfire Street",
                            BillingCity = "College Station",
                            BillingState = "TX",
                            BillingZip = "77843",
                            CustomerFirstName = "Adeline ",
                            CustomerLastName = "Wardell",
                            CustomerPhone = "(732) 308-7385"
                        },
                        new
                        {
                            CustomerID = 3,
                            BillingAddress = "22 Glen Eagles Avenue",
                            BillingCity = "College Station",
                            BillingState = "TX",
                            BillingZip = "77845",
                            CustomerFirstName = "Dexter",
                            CustomerLastName = "Jasmine",
                            CustomerPhone = "(914) 258-9597"
                        },
                        new
                        {
                            CustomerID = 4,
                            BillingAddress = "7433 Jockey Hollow Drive",
                            BillingCity = "College Station",
                            BillingState = "TX",
                            BillingZip = "77842",
                            CustomerFirstName = "Gorden",
                            CustomerLastName = "Roderick",
                            CustomerPhone = "(210) 485-9946"
                        },
                        new
                        {
                            CustomerID = 5,
                            BillingAddress = "141 Silver Spear Lane",
                            BillingCity = "College Station",
                            BillingState = "TX",
                            BillingZip = "77845",
                            CustomerFirstName = "Kevin",
                            CustomerLastName = "Nguyen",
                            CustomerPhone = "(713) 555-4321"
                        });
                });

            modelBuilder.Entity("JasperGreen.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeID"));

                    b.Property<string>("EmployeeFirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeLastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("HourlyRate")
                        .HasColumnType("decimal(8,2)");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SSN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeID");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeID = 1,
                            EmployeeFirstName = "Bjork",
                            EmployeeLastName = "Sonja",
                            HireDate = new DateTime(2025, 4, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HourlyRate = 30.30m,
                            JobTitle = "Crewman Associate 1",
                            SSN = "123456789"
                        },
                        new
                        {
                            EmployeeID = 2,
                            EmployeeFirstName = "Amina",
                            EmployeeLastName = "Sara",
                            HireDate = new DateTime(2025, 4, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HourlyRate = 30.30m,
                            JobTitle = "Crewman Intern",
                            SSN = "223456789"
                        },
                        new
                        {
                            EmployeeID = 3,
                            EmployeeFirstName = "Pakpao",
                            EmployeeLastName = "Amporn",
                            HireDate = new DateTime(2025, 4, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HourlyRate = 30.30m,
                            JobTitle = "Junior Janatorial Consultant 1",
                            SSN = "323456789"
                        },
                        new
                        {
                            EmployeeID = 4,
                            EmployeeFirstName = "Mihangel",
                            EmployeeLastName = "Dai",
                            HireDate = new DateTime(2000, 12, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HourlyRate = 30.30m,
                            JobTitle = "Senior Leaf Blowing Partner",
                            SSN = "423456789"
                        },
                        new
                        {
                            EmployeeID = 5,
                            EmployeeFirstName = "Willihard",
                            EmployeeLastName = "Epiphanes",
                            HireDate = new DateTime(2020, 4, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HourlyRate = 13.35m,
                            JobTitle = "Crewman Intern",
                            SSN = "523456789"
                        },
                        new
                        {
                            EmployeeID = 6,
                            EmployeeFirstName = "Nikandros",
                            EmployeeLastName = "Leutgar",
                            HireDate = new DateTime(2005, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HourlyRate = 34.34m,
                            JobTitle = "Leaf Blowing Analyst 2",
                            SSN = "523456789"
                        },
                        new
                        {
                            EmployeeID = 7,
                            EmployeeFirstName = "Gervasius",
                            EmployeeLastName = "Lydos",
                            HireDate = new DateTime(2004, 6, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HourlyRate = 30.30m,
                            JobTitle = "Crewman Associate 1",
                            SSN = "523456789"
                        },
                        new
                        {
                            EmployeeID = 8,
                            EmployeeFirstName = "Attikos",
                            EmployeeLastName = "Manuel",
                            HireDate = new DateTime(2004, 4, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HourlyRate = 50.30m,
                            JobTitle = "Senior Janitorial Consultant",
                            SSN = "523456789"
                        },
                        new
                        {
                            EmployeeID = 9,
                            EmployeeFirstName = "Acacius",
                            EmployeeLastName = "Ardalion",
                            HireDate = new DateTime(2005, 7, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HourlyRate = 30.30m,
                            JobTitle = "Crewman Associate 1",
                            SSN = "523456789"
                        },
                        new
                        {
                            EmployeeID = 10,
                            EmployeeFirstName = "Facundus",
                            EmployeeLastName = "Nazarius",
                            HireDate = new DateTime(2009, 5, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HourlyRate = 30.30m,
                            JobTitle = "Crewman Associate 1",
                            SSN = "523456789"
                        },
                        new
                        {
                            EmployeeID = 11,
                            EmployeeFirstName = "Rocco",
                            EmployeeLastName = "Sophus",
                            HireDate = new DateTime(1997, 10, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HourlyRate = 30.30m,
                            JobTitle = "Crewman Associate 1",
                            SSN = "523456789"
                        },
                        new
                        {
                            EmployeeID = 12,
                            EmployeeFirstName = "Balderich",
                            EmployeeLastName = "Raginhard",
                            HireDate = new DateTime(2016, 10, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HourlyRate = 30.30m,
                            JobTitle = "Crewman Associate 1",
                            SSN = "523456789"
                        },
                        new
                        {
                            EmployeeID = 13,
                            EmployeeFirstName = "Artabazos",
                            EmployeeLastName = "Rufinus",
                            HireDate = new DateTime(2019, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HourlyRate = 30.30m,
                            JobTitle = "Crewman Associate 1",
                            SSN = "523456789"
                        },
                        new
                        {
                            EmployeeID = 14,
                            EmployeeFirstName = "Vibius",
                            EmployeeLastName = "Alfarr",
                            HireDate = new DateTime(2007, 4, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HourlyRate = 30.30m,
                            JobTitle = "Crewman Associate 1",
                            SSN = "523456789"
                        },
                        new
                        {
                            EmployeeID = 15,
                            EmployeeFirstName = "Deusdedit",
                            EmployeeLastName = "Pygmalion",
                            HireDate = new DateTime(2017, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HourlyRate = 30.30m,
                            JobTitle = "Crewman Associate 1",
                            SSN = "523456789"
                        });
                });

            modelBuilder.Entity("JasperGreen.Models.Payment", b =>
                {
                    b.Property<int>("PaymentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentID"));

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<decimal>("PaymentAmount")
                        .HasColumnType("decimal(8,2)");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.HasKey("PaymentID");

                    b.HasIndex("CustomerID");

                    b.ToTable("Payments");

                    b.HasData(
                        new
                        {
                            PaymentID = 1,
                            CustomerID = 1,
                            PaymentAmount = 200.00m,
                            PaymentDate = new DateTime(2025, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PaymentID = 2,
                            CustomerID = 2,
                            PaymentAmount = 400.00m,
                            PaymentDate = new DateTime(2024, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PaymentID = 3,
                            CustomerID = 3,
                            PaymentAmount = 215.00m,
                            PaymentDate = new DateTime(2023, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PaymentID = 4,
                            CustomerID = 4,
                            PaymentAmount = 210.00m,
                            PaymentDate = new DateTime(2025, 2, 9, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PaymentID = 5,
                            CustomerID = 5,
                            PaymentAmount = 180.00m,
                            PaymentDate = new DateTime(2025, 1, 19, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("JasperGreen.Models.Property", b =>
                {
                    b.Property<int>("PropertyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PropertyID"));

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<string>("PropertyAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropertyCity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropertyState")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropertyZip")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ServiceFee")
                        .HasColumnType("decimal(8,2)");

                    b.HasKey("PropertyID");

                    b.HasIndex("CustomerID");

                    b.ToTable("Properties");

                    b.HasData(
                        new
                        {
                            PropertyID = 1,
                            CustomerID = 1,
                            PropertyAddress = "2200 Cottage Lane",
                            PropertyCity = "College Station",
                            PropertyState = "Texas",
                            PropertyZip = "77840",
                            ServiceFee = 100.00m
                        },
                        new
                        {
                            PropertyID = 2,
                            CustomerID = 1,
                            PropertyAddress = "101 University Drive",
                            PropertyCity = "College Station",
                            PropertyState = "Texas",
                            PropertyZip = "77840",
                            ServiceFee = 100.00m
                        },
                        new
                        {
                            PropertyID = 3,
                            CustomerID = 2,
                            PropertyAddress = "500 George Bush Drive",
                            PropertyCity = "College Station",
                            PropertyState = "Texas",
                            PropertyZip = "77840",
                            ServiceFee = 300.00m
                        },
                        new
                        {
                            PropertyID = 4,
                            CustomerID = 2,
                            PropertyAddress = "202 Southwest Parkway",
                            PropertyCity = "College Station",
                            PropertyState = "Texas",
                            PropertyZip = "77840",
                            ServiceFee = 100.00m
                        },
                        new
                        {
                            PropertyID = 5,
                            CustomerID = 3,
                            PropertyAddress = "1501 Harvey Road",
                            PropertyCity = "College Station",
                            PropertyState = "Texas",
                            PropertyZip = "77840",
                            ServiceFee = 100.00m
                        },
                        new
                        {
                            PropertyID = 6,
                            CustomerID = 3,
                            PropertyAddress = "909 Texas Avenue South",
                            PropertyCity = "College Station",
                            PropertyState = "Texas",
                            PropertyZip = "77840",
                            ServiceFee = 100.00m
                        },
                        new
                        {
                            PropertyID = 7,
                            CustomerID = 4,
                            PropertyAddress = "3200 Longmire Drive",
                            PropertyCity = "College Station",
                            PropertyState = "Texas",
                            PropertyZip = "77845",
                            ServiceFee = 110.00m
                        },
                        new
                        {
                            PropertyID = 8,
                            CustomerID = 4,
                            PropertyAddress = "1801 Holleman Dr",
                            PropertyCity = "College Station",
                            PropertyState = "Texas",
                            PropertyZip = "77840",
                            ServiceFee = 100.00m
                        },
                        new
                        {
                            PropertyID = 9,
                            CustomerID = 5,
                            PropertyAddress = "2301 Earl Rudder Fwy South",
                            PropertyCity = "College Station",
                            PropertyState = "Texas",
                            PropertyZip = "77845",
                            ServiceFee = 90.00m
                        },
                        new
                        {
                            PropertyID = 10,
                            CustomerID = 5,
                            PropertyAddress = "4101 Texas Ave",
                            PropertyCity = "College Station",
                            PropertyState = "Texas",
                            PropertyZip = "77840",
                            ServiceFee = 90.00m
                        });
                });

            modelBuilder.Entity("JasperGreen.Models.ProvideService", b =>
                {
                    b.Property<int>("ServiceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServiceID"));

                    b.Property<int>("CrewID")
                        .HasColumnType("int");

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<int?>("PaymentID")
                        .HasColumnType("int");

                    b.Property<int>("PropertyID")
                        .HasColumnType("int");

                    b.Property<DateTime>("ServiceDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ServiceFee")
                        .HasColumnType("decimal(8,2)");

                    b.HasKey("ServiceID");

                    b.HasIndex("CrewID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("PaymentID");

                    b.HasIndex("PropertyID");

                    b.ToTable("ProvideServices");

                    b.HasData(
                        new
                        {
                            ServiceID = 1,
                            CrewID = 1,
                            CustomerID = 1,
                            PaymentID = 1,
                            PropertyID = 1,
                            ServiceDate = new DateTime(2025, 4, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ServiceFee = 100m
                        },
                        new
                        {
                            ServiceID = 2,
                            CrewID = 1,
                            CustomerID = 1,
                            PaymentID = 1,
                            PropertyID = 2,
                            ServiceDate = new DateTime(2025, 4, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ServiceFee = 100m
                        },
                        new
                        {
                            ServiceID = 3,
                            CrewID = 2,
                            CustomerID = 2,
                            PaymentID = 2,
                            PropertyID = 3,
                            ServiceDate = new DateTime(2024, 6, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ServiceFee = 300m
                        },
                        new
                        {
                            ServiceID = 4,
                            CrewID = 2,
                            CustomerID = 2,
                            PaymentID = 2,
                            PropertyID = 4,
                            ServiceDate = new DateTime(2024, 6, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ServiceFee = 100m
                        },
                        new
                        {
                            ServiceID = 5,
                            CrewID = 3,
                            CustomerID = 3,
                            PaymentID = 3,
                            PropertyID = 5,
                            ServiceDate = new DateTime(2023, 1, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ServiceFee = 100m
                        },
                        new
                        {
                            ServiceID = 6,
                            CrewID = 3,
                            CustomerID = 3,
                            PaymentID = 3,
                            PropertyID = 6,
                            ServiceDate = new DateTime(2023, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ServiceFee = 100m
                        },
                        new
                        {
                            ServiceID = 7,
                            CrewID = 4,
                            CustomerID = 4,
                            PaymentID = 4,
                            PropertyID = 7,
                            ServiceDate = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ServiceFee = 110m
                        },
                        new
                        {
                            ServiceID = 8,
                            CrewID = 4,
                            CustomerID = 4,
                            PaymentID = 4,
                            PropertyID = 8,
                            ServiceDate = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ServiceFee = 100m
                        },
                        new
                        {
                            ServiceID = 9,
                            CrewID = 5,
                            CustomerID = 5,
                            PaymentID = 5,
                            PropertyID = 9,
                            ServiceDate = new DateTime(2025, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ServiceFee = 90m
                        },
                        new
                        {
                            ServiceID = 10,
                            CrewID = 5,
                            CustomerID = 5,
                            PaymentID = 5,
                            PropertyID = 10,
                            ServiceDate = new DateTime(2025, 1, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ServiceFee = 90m
                        });
                });

            modelBuilder.Entity("JasperGreen.Models.Crew", b =>
                {
                    b.HasOne("JasperGreen.Models.Employee", "CrewForeman")
                        .WithMany("Crews")
                        .HasForeignKey("CrewForemanID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("JasperGreen.Models.Employee", "CrewMember1")
                        .WithMany("Member1")
                        .HasForeignKey("CrewMember1ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("JasperGreen.Models.Employee", "CrewMember2")
                        .WithMany("Member2")
                        .HasForeignKey("CrewMember2ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CrewForeman");

                    b.Navigation("CrewMember1");

                    b.Navigation("CrewMember2");
                });

            modelBuilder.Entity("JasperGreen.Models.Payment", b =>
                {
                    b.HasOne("JasperGreen.Models.Customer", "Customer")
                        .WithMany("Payments")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("JasperGreen.Models.Property", b =>
                {
                    b.HasOne("JasperGreen.Models.Customer", "Customer")
                        .WithMany("Properties")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("JasperGreen.Models.ProvideService", b =>
                {
                    b.HasOne("JasperGreen.Models.Crew", "Crew")
                        .WithMany("ProvideServices")
                        .HasForeignKey("CrewID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("JasperGreen.Models.Customer", "Customer")
                        .WithMany("ProvideServices")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("JasperGreen.Models.Payment", "Payment")
                        .WithMany("ProvideServices")
                        .HasForeignKey("PaymentID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("JasperGreen.Models.Property", "Property")
                        .WithMany("ProvideServices")
                        .HasForeignKey("PropertyID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Crew");

                    b.Navigation("Customer");

                    b.Navigation("Payment");

                    b.Navigation("Property");
                });

            modelBuilder.Entity("JasperGreen.Models.Crew", b =>
                {
                    b.Navigation("ProvideServices");
                });

            modelBuilder.Entity("JasperGreen.Models.Customer", b =>
                {
                    b.Navigation("Payments");

                    b.Navigation("Properties");

                    b.Navigation("ProvideServices");
                });

            modelBuilder.Entity("JasperGreen.Models.Employee", b =>
                {
                    b.Navigation("Crews");

                    b.Navigation("Member1");

                    b.Navigation("Member2");
                });

            modelBuilder.Entity("JasperGreen.Models.Payment", b =>
                {
                    b.Navigation("ProvideServices");
                });

            modelBuilder.Entity("JasperGreen.Models.Property", b =>
                {
                    b.Navigation("ProvideServices");
                });
#pragma warning restore 612, 618
        }
    }
}
